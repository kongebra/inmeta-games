# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - studio
      - .vscode

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "e834b313-34a3-47fb-9d26-f0280a311897"
  imageRepository: "inmetagames"
  containerRegistry: "sveinnexttest.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/frontend/Dockerfile"
  tag: "$(Build.BuildId)"
  webAppName: "svein-next-container"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install Node.js"

          - script: |
              yarn --frozen-lockfile
              yarn build
            displayName: "yarn install and build"
            workingDirectory: "frontend"
            env:
              NEXT_PUBLIC_SANITY_PROJECT_ID: jhhsx3kh

          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              containerRegistry: 'sveinnexttest'
              repository: '$(imageRepository)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: '$(tag)'

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: [Build]
    condition: succeeded()
    jobs:
      - job: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: AzureRmWebAppDeployment@4
            displayName: Deploy Docker image to Staging
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Enterprise Dev/Test(a7d32964-b533-4f5e-a80d-66bf28040079)'
              appType: 'webAppContainer'
              WebAppName: 'svein-next-container'
              DockerNamespace: '$(containerRegistry)'
              DockerRepository: '$(imageRepository)'
              DockerImageTag: '$(tag)'
